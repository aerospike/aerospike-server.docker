#
# Aerospike Server Dockerfile
#
# http://github.com/aerospike/aerospike-server.docker
#

FROM ${DOCKER_REGISTRY_URL}/${LINUX_BASE}

ARG AEROSPIKE_X86_64_LINK=\"${AEROSPIKE_X86_64_LINK}\"
ARG AEROSPIKE_SHA_X86_64=\"${AEROSPIKE_SHA_X86_64}\"
ARG AEROSPIKE_AARCH64_LINK=\"${AEROSPIKE_AARCH64_LINK}\"
ARG AEROSPIKE_SHA_AARCH64=\"${AEROSPIKE_SHA_AARCH64}\"

SHELL ["/bin/bash", "-Eeuo", "pipefail", "-c"]

# Install Aerospike Server and Tools
RUN \
$(cat ${g_data_scripts_dir}/00-prelude-${LINUX_PKG_TYPE}.part)
$(cat ${g_data_scripts_dir}/10-download.part)
$(cat ${g_data_scripts_dir}/20-install-dependencies-${LINUX_PKG_TYPE}.part)
$(cat ${g_data_scripts_dir}/30-install-tools.part)
$(cat ${g_data_scripts_dir}/40-cleanup.part)
$(cat ${g_data_scripts_dir}/50-remove-prelude-${LINUX_PKG_TYPE}.part)
  echo "done";

LABEL org.opencontainers.image.title=\"Aerospike ${AEROSPIKE_EDITION^} Server\" \\
      org.opencontainers.image.description=\"${AEROSPIKE_DESCRIPTION}\" \\
      org.opencontainers.image.documentation="https://hub.docker.com/_/aerospike" \
      org.opencontainers.image.base.name=\"docker.io/library/${LINUX_BASE}\" \\
      org.opencontainers.image.source="https://github.com/aerospike/aerospike-server.docker" \
      org.opencontainers.image.vendor="Aerospike" \
      org.opencontainers.image.version=\"${AEROSPIKE_VERSION}\" \\
      org.opencontainers.image.url="https://github.com/aerospike/aerospike-server.docker"

# Add the Aerospike configuration specific to this dockerfile
COPY aerospike.template.conf /etc/aerospike/aerospike.template.conf

# Mount the Aerospike data directory
# VOLUME ["/opt/aerospike/data"]
# Mount the Aerospike config directory
# VOLUME ["/etc/aerospike/"]

# Expose Aerospike ports
#
#   3000 – service port, for client connections
#   3001 – fabric port, for cluster communication
#   3002 – mesh port, for cluster heartbeat
#
EXPOSE 3000 3001 3002

RUN chown aerospike:aerospike /etc/aerospike/*
USER aerospike:aerospike

COPY entrypoint.sh /entrypoint.sh

# Tini init set to restart ASD on SIGUSR1 and terminate ASD on SIGTERM
ENTRYPOINT ["/usr/bin/as-tini-static", "-r", "SIGUSR1", "-t", "SIGTERM", "--", "/entrypoint.sh"]

# Execute the run script in foreground mode
CMD ["asd"]
