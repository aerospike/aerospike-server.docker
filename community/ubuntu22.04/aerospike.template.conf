# Aerospike database configuration file
# This template sets up a single-node, single namespace developer environment.
#
# Alternatively, you can pass in your own configuration file.
# You can see more examples at
# https://github.com/aerospike/aerospike-server/tree/master/as/etc

# This stanza must come first.
service {
	$([ -n "${FEATURE_KEY_FILE}" ] && echo "feature-key-file ${FEATURE_KEY_FILE}")
	cluster-name docker
}

logging {
	$([ -n "${LOGFILE}" ] && echo "# Log file must be an absolute path.")
	$([ -n "${LOGFILE}" ] && echo "file ${LOGFILE} {")
	$([ -n "${LOGFILE}" ] && echo "    context any info")
	$([ -n "${LOGFILE}" ] && echo "}")

	# Send log messages to stdout
	console {
		context any info
	}
}

network {
	service {
		address ${SERVICE_ADDRESS}
		port ${SERVICE_PORT}

		# Uncomment the following to set the 'access-address' parameter to the
		# IP address of the Docker host. This will the allow the server to correctly
		# publish the address which applications and other nodes in the cluster to
		# use when addressing this node.
		# access-address <IPADDR>
	}

	heartbeat {
		# mesh is used for environments that do not support multicast
		mode mesh
		address local
		port 3002
		interval 150
		timeout 10
	}

	fabric {
		# Intra-cluster communication port (migrates, replication, etc)
		# default to same address in 'service'
		address local
		port 3001
	}

}

namespace ${NAMESPACE} {
	default-ttl ${DEFAULT_TTL} # use 0 to never expire/evict.
	nsup-period ${NSUP_PERIOD}
	replication-factor 1
	storage-engine $([ "${DATA_IN_MEMORY}" = "true" ] && echo "memory" || echo "device") {
		# For 'storage-engine memory' with 'device' or 'file' backing, we
		# recommend having multiple devices (eight is recommended). One is used
		# here for backward compatibility.
		file /opt/aerospike/data/${NAMESPACE}.dat
		filesize ${STORAGE_GB}G
		$(([ -z "${DATA_IN_MEMORY}" ] || [ "${DATA_IN_MEMORY}" = "false" ]) && echo "read-page-cache ${READ_PAGE_CACHE}")
	}
}
